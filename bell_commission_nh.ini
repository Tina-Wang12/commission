[postgres]
brs = jdbc:postgresql://10.2.97.52:5432/OSL?currentSchema=brs
adp = jdbc:postgresql://10.2.97.52:5432/OSLR_US?currentSchema=mdb
stg = jdbc:postgresql://10.2.97.52:5432/CA?currentSchema=stg
mdb = jdbc:postgresql://10.2.97.52:5432/OLTP?currentSchema=mdb
driver = org.postgresql.Driver

[path]
log_path =  /home/spark/belladp/logs
config_path = /home/spark/belladp/config

[queries]
;update log: 2024-07-22 New Hire (adding exceptions)
;            2024-08-25 Mobility COAM 0.75
;			 2024-11-03 Mobility COAM 0.5 and FTTN rate card update
;			 2024-11-07 manager commission
;			 2024-11-07 Backbone update
;			 2025-01-12 New Rate Card plans


;get the latest unique ADP records for Bell employees
Bell_employee_ADP=			select 
								pein,
								positionid,
								concat(firstname, ' ',lastname) name,
								*
							from (
								select 
									*,
									row_number() over(partition by pein order by coalesce(DATE_FORMAT(cast(terminationdate as date), 'yyyy-MM-dd'),cast({1} as date)) desc) as rn  
								from employee_profile_history wa 
								where record_activation_flag = true and (positionid like 'REKA{0}' 
									and substring(homecostnbrcode,1, 2) in (
										select 
											distinct costcode 
										from clientprogram_mapping where clientcode like '{0}BELL{0}' ))
									or homecostnbrcode like 'BR-CLS{0}' 
								) ds
							where rn=1

;get pay period start date and end date for brs
Bell_current_payperiod=		with current_period as(
								select 
									*
								from bell_payroll_calendar
								where cast({1} as date) between start_date AND end_date
							)

							select 
								pp,
								start_date as current_pp_start_date,
								end_date as current_pp_end_date,
								year,
								row_id
							from bell_payroll_calendar
							where cast(row_id as integer) = (select cast(row_id as integer)-1 from current_period)


;get pay period start date for bmt
bmt_payperiod=				WITH payroll_lagged AS (
							    SELECT
							        pp,
							        start_date,
							        end_date,
							        LAG(year,1) over (order by row_id) as year,
							        row_id,
							        LAG(start_date, 3) OVER (ORDER BY row_id) AS three_prev_start_date,  -- One pay period ago
							        LAG(start_date, 2) OVER (ORDER BY row_id) AS two_periods_ago_start_date,  -- Two pay periods ago
							        LAG(end_date, 1) OVER (ORDER BY row_id) AS prev_end_date,  -- One pay period ago
							        LAG(end_date, 2) OVER (ORDER BY row_id) AS two_periods_ago_end_date,  -- Two pay periods ago
							        LAG(pp, 1) OVER (ORDER BY row_id) AS prev_pp,  -- Previous pay period
							        LAG(pp, 2) OVER (ORDER BY row_id) AS two_periods_ago_pp  -- Two pay periods ago
							    FROM bell_payroll_calendar
							),

							bmt_current_payperiod AS (
							     SELECT 
							        pl.pp, 
							        pl.start_date AS current_pp_start_date, 
							        pl.end_date AS current_pp_end_date, 
							        pl.year, 
							        pl.row_id,
							        pl.three_prev_start_date, 
							        pl.two_periods_ago_start_date,
							        pl.prev_end_date,
							        pl.two_periods_ago_end_date,
							        pl.prev_pp,
							        pl.two_periods_ago_pp
							    FROM payroll_lagged pl
							    WHERE CAST({1} AS DATE) BETWEEN pl.start_date AND pl.end_date
							),

							bmt_payperiod AS (
							    SELECT 
							        bmtp.prev_pp AS pp,
							        bmtp.year,
							        CASE 
							            WHEN MOD(bmtp.pp, 2) = 0 THEN bmtp.three_prev_start_date  -- row_id - 3
							            ELSE bmtp.two_periods_ago_start_date  -- row_id - 2
							        END AS bmt_start_date,
							        CASE 
							            WHEN MOD(bmtp.pp, 2) = 0 THEN bmtp.two_periods_ago_end_date -- row_id - 2
							            ELSE bmtp.prev_end_date  -- row_id - 1
							        END AS bmt_end_date,
							        CASE 
							            WHEN MOD(bmtp.pp, 2) = 0 THEN 'Bonus'
							            ELSE 'Commission'
							        END AS bmt_payment_type,
							        'BMT' AS bus_unit
							    FROM bmt_current_payperiod bmtp
							)

							SELECT * FROM bmt_payperiod

;get employee list from ADP who was hired after New Hire program launch 2024-07-22
;Excluding 'EQ63945','EQ62658','EQ62906','EQ62494','EQ61720','EQ62102','EQ62141'
Bell_newhire_employee=		select distinct
								firstname,
								lastname,
								positionid,
								pein,
								cast(hiredate as date) as hiredate 
							from Bell_employee_ADP
							where hiredate >= '2024-07-22' and pein not in ('EQ63945','EQ62658','EQ62906','EQ62494','EQ61720','EQ62102','EQ62141')

;get first four pay periods for each new hires
Bell_nh_current_pp=			with first_eligible_period as (
								select distinct
									ee.*,
									cast(bc.start_date as date) as first_start_date
								from Bell_newhire_employee ee
								join bell_payroll_calendar bc
								on cast(ee.hiredate as date) between cast(bc.start_date as date) and cast(bc.end_date as date)
							),
							
							pay_periods_after_hire as(
								select 
									ee.*,
									cast(bc2.start_date as date) as nh_pay_period_start,
									cast(bc2.end_date as date) as nh_pay_period_end,
									row_number() over (partition by ee.positionid order by cast(bc2.start_date as date)) as period_number
								from Bell_newhire_employee ee
								join first_eligible_period fep
								on ee.positionid=fep.positionid
								join bell_payroll_calendar bc2
								on cast(bc2.start_date as date)>=cast(fep.first_start_date as date)
							)
							
							select distinct
								pe.*
							from pay_periods_after_hire pe
							cross join Bell_current_payperiod bp
							where pe.period_number<=4 and (nullif(pein,'') is not null) 
								and cast(pe.nh_pay_period_start as date)=cast(bp.current_pp_start_date as date)
							order by pe.positionid;

;get active rate card
Bell_rate_card=				select 
								ra.* 
							from bell_commission_rate ra
							cross join Bell_current_payperiod bp
							where eff_date<=cast(bp.current_pp_start_date as date)

;get the activation/adjustment/move/migration/referral data for the current pay period for nmt teams
Bell_act=					select
								bosf.*,
								case 
									when lower(transaction_type) in ('activation','brand migration') 
										or lower(transaction_type) like 'adjustment{0}' then 'Activation'
									else transaction_type
								end as transaction_type_new,
								case 
									when lower(transaction_type) like '{0}brand migration{0}' then 'Brand Migration'
								else null
								end as notes,
								case 
									when lower(lob) like '{0}mobility{0}' then 'WLS'
								else 'WLN'
								end as segment
							from bell_osl_sales_feed bosf
							cross join Bell_current_payperiod pp
							where activation_date between pp.current_pp_start_date and pp.current_pp_end_date
								and lower(bosf.bus_unit) not like '{0}bsb{0}'
								and lower(team_bell) not like '{0}osl{0}'
								and lower(transaction_type) in ('activation','adjustment','brand migration')
								and PAYMENT_DESCRIPTION in ('Main Query','Manual Adjustment','Main Query Adjustment')

;get the activation/adjustment/migration data for the current pay period for bmt teams
bmt_act=					select
								bosf.*,
								case 
									when lower(transaction_type) in ('activation','brand migration') 
										or lower(transaction_type) like 'adjustment{0}' then 'Activation'
									else transaction_type
								end as transaction_type_new,
								case 
									when lower(transaction_type) like '{0}brand migration{0}' then 'Brand Migration'
								else null
								end as notes,
								case 
									when lower(lob) like '{0}mobility{0}' then 'WLS'
								else 'WLN'
								end as segment
							from bell_osl_sales_feed bosf
							cross join bmt_payperiod pp
							where activation_date between pp.bmt_start_date and pp.bmt_end_date
								and lower(bosf.bus_unit) like '{0}bsb{0}'
								and lower(team_bell) not like '{0}osl{0}'
								and lower(transaction_type) in ('activation','adjustment','brand migration')
								and PAYMENT_DESCRIPTION in ('Main Query','Manual Adjustment','Main Query Adjustment')

;get the latest version of NR records for each eligible Bell employees
Bell_lastv_nr=				with maxversion as (
								select
									pein,
									max(version_we) as max_version_we
								from nominal_roll_agent
								where version_we<=cast({1} as date)
								group by pein
							),
							

							nr_terminate as(
								select 
									nr.* 
								from nominal_roll_agent nr
								join maxversion nr_max
								on nr.pein=nr_max.pein and nr.version_we=nr_max.max_version_we
								cross join Bell_current_payperiod pp_end
								where terminationdate is not null and terminationdate>=(pp_end.current_pp_start_date - interval '90 days')
							),

							nr_active as(
								select
									nra.*
								from nominal_roll_agent nra
								join maxversion nr_maxa
								on nra.pein=nr_maxa.pein and nra.version_we=nr_maxa.max_version_we
								cross join Bell_current_payperiod pp_end
								where terminationdate is null and nra.version_we=pp_end.current_pp_end_date
							),

							--some peins have two rows from the same version_we, one is active and one is terminate.
							combined_nr as(
								select
									*,
									row_number() over (PARTITION BY pein, version_we 
														ORDER BY CASE WHEN terminationdate IS NOT NULL THEN 1 ELSE 2 END) AS row_num
								from (
									select * from nr_active

									union all

									select * from nr_terminate
								) as combined
							),

							last_nr AS (
							    SELECT
							        cnr.*
							    FROM combined_nr cnr
							    WHERE row_num = 1
							),

							final_nr AS (
							    SELECT 
							        pein,
							        MAX(version_we) AS latest_version
							    FROM last_nr
							    GROUP BY pein
							)

							-- Final output: Select the latest version_we per pein
							SELECT 
							    ln.*
							FROM final_nr fn
							JOIN last_nr ln
							ON fn.pein = ln.pein 
							   AND fn.latest_version = ln.version_we

;get the latest version of NR NMT team records and add new hire status for each eligible Bell employees
Bell_brs_nr=				with maxversion as (
								select
									pein,
									max(version_we) as max_version_we
								from nominal_roll_agent nra
								where version_we<=cast({1} as date) and nra.team not like '{0}BSB{0}' and lower(nra.team) not like '{0}osl{0}'
								group by pein
							),

							brs_nr as(
								select
									nra.* 
								from nominal_roll_agent nra
								join maxversion nr_maxvb
								on nra.pein=nr_maxvb.pein and nra.version_we =nr_maxvb.max_version_we
								where nra.team not like '{0}BSB{0}' and lower(nra.team) not like '{0}osl{0}'
							),

							newhire_flag AS (
    							SELECT
       								pein,
       								hiredate,
       								period_number,
        							1 AS newhire_exists_flag
    								FROM Bell_nh_current_pp
							)

							select distinct
								bnr.pein,
								bnr.firstname,
								bnr.lastname,
								bnr.team,
								bnr.fieldmanager,
								bnr.regionalmanager,
								bnr.director,
								bnr.province,
								bnr.workemail,
								lnr.startdate,
								lnr.status,
								lnr.enddate,
								lnr.terminationdate,
								lnr.version_we,
								CASE WHEN nhf.newhire_exists_flag IS NULL THEN 'N' ELSE 'Y' END AS newhire,
								nhf.hiredate,
								nhf.period_number
							from brs_nr bnr
							join Bell_lastv_nr lnr
							on bnr.pein=lnr.pein
							left join newhire_flag nhf
							on bnr.pein = nhf.pein

;get the latest version of NR BMT team records and add new hire status for each eligible Bell employees
Bell_bmt_nr=				with maxversion as (
								select
									pein,
									max(version_we) as max_version_we
								from nominal_roll_agent nra
								where version_we<=cast({1} as date) and nra.team like '{0}BSB{0}' and lower(nra.team) not like '{0}osl{0}'
								group by pein
							),

							bmt_nr as(
								select
									nra.* 
								from nominal_roll_agent nra
								join maxversion nr_maxvb
								on nra.pein=nr_maxvb.pein and nra.version_we =nr_maxvb.max_version_we
								where nra.team like '{0}BSB{0}' and lower(nra.team) not like '{0}osl{0}'
							),

							newhire_flag AS (
    							SELECT
       								pein,
       								hiredate,
       								period_number,
        							1 AS newhire_exists_flag
    								FROM Bell_nh_current_pp
							)

							select distinct
								bnr.pein,
								bnr.firstname,
								bnr.lastname,
								bnr.team,
								bnr.fieldmanager,
								bnr.regionalmanager,
								bnr.director,
								bnr.province,
								bnr.workemail,
								lnr.startdate,
								lnr.status,
								lnr.enddate,
								lnr.terminationdate,
								lnr.version_we,
								'N' AS newhire,
								nhf.hiredate,
								nhf.period_number
							from bmt_nr bnr
							join Bell_lastv_nr lnr
							on bnr.pein=lnr.pein
							left join newhire_flag nhf
							on bnr.pein = nhf.pein


;calculate nmt commission, 2025-01-12 new rate card launch
brs_commission=				with BRS_count as(
								select
									ba.*,
									a.pein,
									a.newhire,
									h.team,
									h.pay_structure,
									case 
										when lower(ba.lob) like '{0}starter{0}' or lower(ba.lob) like '{0}fibe tv app{0}' then 0.5
										when lower(lob) like '{0}coam{0}' and activation_date>='2025-01-12' then 1
										when lower(lob) like '{0}coam{0}' and activation_date>='2024-11-03'then 0.5
										when lower(lob) like '{0}coam{0}' and activation_date>='2024-09-01'then 0.75
										when lower(lob) like '{0}24{0}' then 2
										else 1
										end as acount,
									sum(case
											when lower(ba.lob) like '{0}starter{0}' or lower(ba.lob) like '{0}fibe tv app{0}' then 0.5
											when lower(ba.lob) like '{0}mobility{0}' then 0
											else 1
										end) over (partition by ba.sales_rep_id) as tcount
								from Bell_act ba
								join Bell_brs_nr a 
								on lower(a.pein)=lower(ba.sales_rep_id)
								join bell_osl_hierarchy_newratecard h on lower(h.team) =lower(a.team)
								),

							Active_rate_card as(
								select
									bcr.*,
									pp_end.*
								from Bell_rate_card bcr
								cross join Bell_current_payperiod pp_end
								where eff_date<=cast(pp_end.current_pp_start_date as date)
									and end_date>=cast(pp_end.current_pp_end_date as date)
								),

							brs_tier as(
								select
									concat('PP_',date_format(r.current_pp_start_date,'yyyyMMdd'))  as payperiod,
									g.bus_unit,
									g.sales_rep_id,
									g.rep_name,
									g.team,
									g.pay_structure,
									g.transaction_type_new as transaction_type,
									g.acount,
									r.tier_rate,
									g.acount * r.tier_rate as commission_amount,
									0 as adj_amount,
									g.orderno,
									g.lob,
									g.activation_date,
									g.sale_date,
									g.customer_last_name,
									g.customer_first_name,
									g.service_tn,
									g.account_number,
									g.subscription_id,
									g.unit_num,
									g.civic_num,
									g.street_name,
									g.street_type,
									g.municipality,
									g.postal_cd,
									g.prov_cd,
									g.tcount,
									g.newhire,
									r.tier_level,
									g.segment,
									'Commission' as payment_type,
									g.notes
								from BRS_count g
								left join Active_rate_card r
								on lower(g.transaction_type_new)=lower(r.rate_type) 
									and lower(g.newhire)=lower(r.newhire)
									and lower(r.plan_name)= lower(g.pay_structure)
									and CEIL(g.tcount) between (r.tier_ll) and r.tier_ul
								where g.segment='WLN'
								),

								mobility_tier as (
									select
										concat('PP_',date_format(r.current_pp_start_date,'yyyyMMdd'))  as payperiod,
										g.bus_unit,
										g.sales_rep_id,
										g.rep_name,
										g.team,
										g.pay_structure,
										g.transaction_type_new as transaction_type,
										g.acount,
										r.ws_tier_rate as tier_rate,
										g.acount * r.ws_tier_rate as commission_amount,
										0 as adj_amount,
										g.orderno,
										g.lob,
										g.activation_date,
										g.sale_date,
										g.customer_last_name,
										g.customer_first_name,
										g.service_tn,
										g.account_number,
										g.subscription_id,
										g.unit_num,
										g.civic_num,
										g.street_name,
										g.street_type,
										g.municipality,
										g.postal_cd,
										g.prov_cd,
										g.tcount,
										g.newhire,
										r.tier_level,
										g.segment,
										'Commission' as payment_type,
										g.notes
									from BRS_count g
									left join Active_rate_card r
									on lower(g.transaction_type_new)=lower(r.rate_type) 
										and lower(g.newhire)=lower(r.newhire)
										and lower(r.plan_name)= lower(g.pay_structure)
										and CEIL(g.tcount) between (r.tier_ll) and r.tier_ul
									where g.segment='WLS'
								)

								select
									*
								from brs_tier

								union all

								select
									*
								from mobility_tier

;calculate bmt commission, 2025-01-12 new rate card launch
bmt_commission=				with BMT_count as(
								select
									ba.*,
									a.pein,
									a.newhire,
									h.team,
									h.pay_structure,
									bpp.bmt_payment_type,
									1 as acount,
									CASE 
            							WHEN bpp.bmt_payment_type = 'Bonus' AND lower(h.team) LIKE '{0}atl{0}' 
            							THEN SUM(CASE WHEN lower(ba.lob) NOT LIKE '{0}mobility{0}' THEN 1 ELSE 0 END) 
                 							OVER (PARTITION BY ba.sales_rep_id)
            							ELSE SUM(CASE WHEN lower(ba.lob) LIKE '{0}mobility{0}' THEN 0 ELSE 1 END) 
                 							OVER (PARTITION BY ba.sales_rep_id)
        							END AS tcount
								from bmt_act ba
								join Bell_bmt_nr a 
								on lower(a.pein)=lower(ba.sales_rep_id)
								join bell_osl_hierarchy_newratecard h on lower(h.team) =lower(a.team)
								cross join bmt_payperiod bpp
								),

							Active_rate_card as(
								select
									bcr.*,
									pp_end.*,
									bpp.current_pp_start_date
								from Bell_rate_card bcr
								cross join bmt_payperiod pp_end
								cross join Bell_current_payperiod bpp
								where eff_date<=cast(pp_end.bmt_start_date as date)
									and end_date>=cast(pp_end.bmt_end_date as date)
								),

							brs_tier as(
								select
									concat('PP_',date_format(r.current_pp_start_date,'yyyyMMdd'))  as payperiod,
									g.bus_unit,
									g.sales_rep_id,
									g.rep_name,
									g.team,
									g.pay_structure,
									g.transaction_type_new as transaction_type,
									g.acount,
									r.tier_rate,
									g.acount * r.tier_rate as commission_amount,
									0 as adj_amount,
									g.orderno,
									g.lob,
									g.activation_date,
									g.sale_date,
									g.customer_last_name,
									g.customer_first_name,
									g.service_tn,
									g.account_number,
									g.subscription_id,
									g.unit_num,
									g.civic_num,
									g.street_name,
									g.street_type,
									g.municipality,
									g.postal_cd,
									g.prov_cd,
									g.tcount,
									g.newhire,
									r.tier_level,
									g.segment,
									g.bmt_payment_type as payment_type,
									g.notes
								from BMT_count g
								left join Active_rate_card r
								on lower(g.transaction_type_new)=lower(r.rate_type) 
									and lower(r.plan_name)= lower(g.pay_structure)
									AND (
           								(g.bmt_payment_type = 'Bonus' AND lower(g.team) LIKE '{0}atl{0}' 
                							AND lower(r.rate_type) = 'wl bonus' 
                							AND lower(r.plan_name) = 'bsb_field_atl' 
               								AND CEIL(g.tcount) BETWEEN r.tier_ll AND r.tier_ul)
            							OR 
            							(g.bmt_payment_type = 'Commission' 
                							AND CEIL(g.tcount) BETWEEN r.tier_ll AND r.tier_ul)
        							)
								where g.segment='WLN'
								),

								mobility_tier as (
									select
										concat('PP_',date_format(r.current_pp_start_date,'yyyyMMdd'))  as payperiod,
										g.bus_unit,
										g.sales_rep_id,
										g.rep_name,
										g.team,
										g.pay_structure,
										g.transaction_type_new as transaction_type,
										g.acount,
										r.ws_tier_rate as tier_rate,
										g.acount * r.ws_tier_rate as commission_amount,
										0 as adj_amount,
										g.orderno,
										g.lob,
										g.activation_date,
										g.sale_date,
										g.customer_last_name,
										g.customer_first_name,
										g.service_tn,
										g.account_number,
										g.subscription_id,
										g.unit_num,
										g.civic_num,
										g.street_name,
										g.street_type,
										g.municipality,
										g.postal_cd,
										g.prov_cd,
										g.tcount,
										g.newhire,
										r.tier_level,
										g.segment,
										g.bmt_payment_type as payment_type,
										g.notes
									from BMT_count g
									left join Active_rate_card r
									on lower(g.transaction_type_new)=lower(r.rate_type) 
										and lower(r.plan_name)= lower(g.pay_structure)
										AND (
								            (g.bmt_payment_type = 'Bonus' AND lower(g.team) LIKE '{0}atl{0}' 
								                AND lower(r.rate_type) = 'wl bonus' 
								                AND lower(r.plan_name) = 'bsb_field_atl' 
								                AND CEIL(g.tcount) BETWEEN r.tier_ll AND r.tier_ul)
								            OR 
								            (g.bmt_payment_type = 'Commission' 
								                AND CEIL(g.tcount) BETWEEN r.tier_ll AND r.tier_ul)
								        )
									where g.segment='WLS'
								)

								select
									*
								from brs_tier

								union all

								select
									*
								from mobility_tier

;union all the commission- bell_brs_commission_final
bell_commission_final=		select 
								*
							from brs_commission

							union all

							select
								*
							from bmt_commission